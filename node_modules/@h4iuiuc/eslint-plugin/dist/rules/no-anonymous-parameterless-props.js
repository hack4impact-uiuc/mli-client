"use strict";
var utils_1 = require("../utils");
module.exports = {
  meta: utils_1.getRuleMetaData(
    "no-anonymous-parameterless-props",
    "require parameterless functions used as props to be passed in by their identifiers",
    "code"
  ),
  create: function(context) {
    return {
      "JSXAttribute > JSXExpressionContainer > ArrowFunctionExpression[body.type='CallExpression']": function(
        node
      ) {
        var callExpression = node.body;
        var callee = callExpression.callee;
        if (
          callee.type === "MemberExpression" &&
          callee.property.type === "Identifier" &&
          callExpression.arguments.length === 0
        ) {
          var functionIdentifier_1 = callee.property;
          context.report({
            node: node,
            message:
              "parameterless functions used as props should be passed in by their identifiers",
            fix: function(fixer) {
              return fixer.replaceText(
                node,
                "this." + functionIdentifier_1.name
              );
            }
          });
        }
      }
    };
  }
};
